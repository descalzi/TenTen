{"version":3,"sources":["theme-context.tsx","Atoms/index.tsx","TopBar/index.tsx","styles.tsx","const.tsx","PlayArea/index.tsx","App.tsx"],"names":["ThemeContext","React","createContext","theme","toggleTheme","pressTrackerAtom","atom","disableTrackerAtom","allSquaresAtom","sessionScoreAtom","displayScorePrevAtom","displayScoreAtom","ThemeIcon","props","themeContext","useContext","name","AwardIcon","TopBar","useAtom","displayScore","displayScorePrev","alignment","title","accessoryLeft","Fragment","icon","initial","value","timing","countBy","accessoryRight","onPress","playAreaStyles","StyleService","create","container","flex","flexDirection","alignItems","subcontainer","overflowX","row","column","square_base","width","height","justifyContent","borderWidth","borderRadius","margin","square_unpressed","borderColor","backgroundColor","color","square_pressed","square_disabled","cursor","COL_BASE","Array","from","map","SingleSquare","styles","useStyleSheet","useState","isActive","setIsActive","isDisabled","setIsDisabled","pressTracker","setPressTracker","disableTracker","setDisableTracker","sessionScore","setSessionScore","setDisplayScore","setDisplayScorePrev","useEffect","includes","data","isPressAboveLimit","useCallback","console","info","log","isPressFullScore","addToTracker","prev","concat","delFromTracker","newTracker","index","indexOf","splice","increaseScore","addScore","resetScore","increaseDisplayScore","checkAndAction","squaresDone","length","handlePress","col","Pressable","style","SquareRow","setAllSquares","useSetAtom","allSquares","keys","forEach","squareValue","Math","floor","random","squareData","push","View","AllSquares","AllRowsAndCols","useMemo","PlayArea","useAtomValue","completedRow","setCompletedRow","completedCol","confettiRef","useRef","current","start","position","filter","square","count","origin","x","y","autoStart","fadeOut","ref","HomeScreen","SafeAreaView","level","setTheme","icons","EvaIconsPack","Provider","eva"],"mappings":"qLAcaA,EAAeC,IAAMC,cAAc,CAC9CC,MAAO,QACPC,YAAa,e,QCPFC,GANgBC,eAAa,GACbA,eAAa,GACTA,eAAa,GACnBA,gBAAc,GACdA,gBAAc,GAETA,eAAuB,KAC1CC,EAAqBD,eAAuB,IAC5CE,EAAiBF,eAAuB,IAExCG,EAAmBH,eAAa,GAChCI,EAAuBJ,eAAa,GACpCK,EAAmBL,eAAa,G,klBCA7C,IAAMM,EAAY,SAACC,GACf,IAAMC,EAAeb,IAAMc,WAAWf,GACtC,OAAO,cAAC,OAAI,OAAKa,GAAK,IAAEG,KAA6B,UAAvBF,EAAaX,MAAoB,MAAQ,WAGrEc,EAAY,SAACJ,GACMZ,IAAMc,WAAWf,GACtC,OAAO,cAAC,OAAI,OAAKa,GAAK,IAAEG,KAAK,YAGpBE,EAAS,WAClB,IAAMJ,EAAeb,IAAMc,WAAWf,GACtC,EAAwCmB,kBAAQR,GAAiB,WAA1DS,EAAY,KACnB,GADoC,KACYD,kBAAQT,IAAqB,WAAtEW,EAAgB,KAAqB,KAyB5C,OACI,cAAC,gBAAa,CACVC,UAAU,SACVC,MAAM,UACNC,cAvBe,WAAH,OAChB,eAAC,IAAMC,SAAQ,WACX,cAAC,sBAAmB,CAACC,KAAMT,IAC3B,cAAC,OAAI,UAAC,YACN,cAAC,UAAa,CACVU,QAASN,EACTO,MAAOR,EACPS,OAAO,SACPC,QAAS,QAgBbC,eAXgB,WAAH,OACjB,cAAC,IAAMN,SAAQ,UACX,cAAC,sBAAmB,CAACC,KAAMd,EAAWoB,QAASlB,EAAaV,oB,iCC/C3D6B,EAAiBC,eAAaC,OAAO,CAC9CC,UAAW,CACPC,KAAM,EACNC,cAAe,SACfC,WAAY,WAEhBC,aAAc,CACVF,cAAe,SACfC,WAAY,SACZE,UAAW,UAEfC,IAAK,CACDJ,cAAe,OAEnBK,OAAQ,CACJL,cAAe,UAEnBM,YAAa,CACTC,MAAO,OACPC,OAAQ,OACRP,WAAY,SACZQ,eAAgB,SAChBC,YAAa,EACbC,aAAc,EACdC,OAAQ,OAEZC,iBAAkB,CACdC,YAAa,wBACbC,gBAAiB,gCACjBC,MAAO,yBAEXC,eAAgB,CACZH,YAAa,wBACbC,gBAAiB,gCACjBC,MAAO,yBAEXE,gBAAiB,CACbJ,YAAa,uBACbC,gBAAiB,8BACjBC,MAAO,uBACPG,OAAQ,aCxCHC,EAAsBC,MAAMC,KAAKD,MAFjB,KAEuCE,KAAI,kBAAM,K,GACrCF,MAAMC,KAAKD,MAFvB,KAE6CE,KAAI,kBAAKH,K,QCgB7EI,EAAe,SAACjD,GAClB,IAAMkD,EAASC,wBAAc/B,GAC7B,EAAgChC,IAAMgE,UAAkB,GAAM,WAAvDC,EAAQ,KAAEC,EAAW,KAC5B,EAAoClE,IAAMgE,UAAkB,GAAM,WAA3DG,EAAU,KAAEC,EAAa,KAChC,EAAwClD,kBAAQd,GAAiB,WAA1DiE,EAAY,KAAEC,EAAe,KACpC,EAA4CpD,kBAAQZ,GAAmB,WAAhEiE,EAAc,KAAEC,EAAiB,KACxC,EAAwCtD,kBAAQV,GAAiB,WAA1DiE,EAAY,KAAEC,EAAe,KACpC,EAAwCxD,kBAAQR,GAAiB,WAA1DS,EAAY,KAAEwD,EAAe,KACpC,EAAgDzD,kBAAQT,GAAqB,WAApDmE,GAAF,KAAqB,MAE5C5E,IAAM6E,WAAU,WACZX,EAAYG,EAAaS,SAASlE,EAAMmE,OACxCX,EAAcG,EAAeO,SAASlE,EAAMmE,SAC7C,CAACV,EAAczD,IAElB,IAAMoE,EAAoBhF,IAAMiF,aAC5B,SAACtD,GAEG,OADAuD,QAAQC,KAAK,cAAeV,EAAc9C,GACtC8C,EAAe9C,EAAQ,KACvBuD,QAAQE,IAAI,2BACL,KAIf,CAACX,IAGCY,EAAmBrF,IAAMiF,aAC3B,SAACtD,GAEG,OADAuD,QAAQC,KAAK,cAAeV,EAAc9C,GACtC8C,EAAe9C,IAAU,KACzBuD,QAAQE,IAAI,6BACL,KAIf,CAACX,IAGCa,EAAetF,IAAMiF,aACvB,SAACF,GACGT,GAAgB,SAACiB,GAEb,OADmB,IAAIA,GAAMC,OAAOT,QAI5C,CAACT,EAAiBD,EAAcK,EAAiBD,IAG/CgB,EAAiBzF,IAAMiF,aACzB,SAACF,GACGL,GAAgB,SAACa,GAAY,OAAKA,EAAOR,EAAKpD,SAC9C2C,GAAgB,SAACiB,GACb,IAAMG,EAAU,IAAOH,GACjBI,EAAQD,EAAWE,QAAQb,GAEjC,OADAW,EAAWG,OAAOF,EAAO,GAClBD,OAGf,CAAChB,EAAiBJ,IAGhBwB,EAAgB9F,IAAMiF,aACxB,SAACc,GACGrB,GAAgB,SAACa,GAAY,OAAKA,EAAOQ,OAE7C,CAACrB,IAGCsB,EAAahG,IAAMiF,aAAY,WACjCP,EAAgB,KACjB,CAACA,IAEEuB,EAAuBjG,IAAMiF,aAC/B,SAACc,GACGnB,EAAoBzD,GACpBwD,GAAgB,SAACY,GAAY,OAAKA,EAAOQ,OAE7C,CAACrB,EAAiBvD,IAGhB+E,EAAiBlG,IAAMiF,aACzB,SAACF,GACG,IAAIC,EAAkBD,EAAKpD,OAA3B,CACA,GAAI0D,EAAiBN,EAAKpD,OAAQ,CAC9BuD,QAAQE,IAAI,6DAEZ,IAAMe,EAAc,IAAI9B,GAAcmB,OAAOT,GAM7C,OALAP,GAAkB,SAACe,GAAsB,OAAKA,EAAKC,OAAOW,MAC1D7B,EAAgB,IAEhB2B,EAAqBxB,EAAeM,EAAKpD,MAAQwE,EAAYC,aAC7DJ,IAGJV,EAAaP,GACbe,EAAcf,EAAKpD,UAEvB,CAACqD,EAAmBK,EAAkBS,EAAeR,EAAcU,EAAY3B,IAG7EgC,EAAcrG,IAAMiF,aACtB,SAACF,GAUG,OATAG,QAAQE,IACJ,kBACAL,EAAKpD,MACL,UACAoD,EAAKtC,IACLsC,EAAKuB,IACLjC,EAAa+B,QAGb/B,EAAaS,SAASC,IACtBG,QAAQE,IAAI,wBACZK,EAAeV,IAIdV,EAAa+B,OAMU,IAAxB/B,EAAa+B,QACblB,QAAQE,IAAI,sCACRf,EAAa,GAAG5B,MAAQsC,EAAKtC,KAAO4B,EAAa,GAAGiC,MAAQvB,EAAKuB,KACjEJ,EAAenB,MAIvBG,QAAQE,IAAI,+CACRf,EAAa,GAAG5B,MAAQ4B,EAAa,GAAG5B,KAAO4B,EAAa,GAAG5B,MAAQsC,EAAKtC,OAI5E4B,EAAa,GAAGiC,MAAQjC,EAAa,GAAGiC,KAAOjC,EAAa,GAAGiC,MAAQvB,EAAKuB,MAH5EJ,EAAenB,MAdfG,QAAQE,IAAI,sBACZc,EAAenB,MAqBvB,CAACV,EAAcC,IAGnB,OACI,cAACiC,EAAA,QAAS,CACNC,MAAO,CACH1C,EAAOnB,YACPsB,EACMH,EAAOR,eACPa,EACAL,EAAOP,gBACPO,EAAOZ,kBAEjBnB,QAAS,kBAAOoC,GAAckC,EAAYzF,EAAMmE,OAAM,SAErDnE,EAAMmE,KAAKpD,SAQlB8E,EAAY,SAAC7F,GACf,IAAM8F,EAAgBC,qBAAWpG,GAE7BqG,EAA+B,GAcnC,OAZAlD,MAAMC,KAAKD,MD5Lc,IC4LOmD,QAAQC,SAAQ,SAACnB,GAC7C,IAAMoB,EAAsBC,KAAKC,MAAsB,GAAhBD,KAAKE,WAAkB,EACxDC,EAA6B,CAC/B1E,IAAK7B,EAAM6B,IACX6D,IAAKX,EAAQ,EACbhE,MAAOoF,GAEXH,EAAWQ,KAAKD,MAGpBT,EAAcE,GAGV,cAACS,EAAA,QAAI,CAACb,MAAOxE,EAAeS,IAAI,SAC5B,mCACKmE,EAAWhD,KAAI,SAACuD,EAA4BxB,GACzC,OAAO,cAAC,EAAY,CAAaZ,KAAMoC,GAAbxB,WAOxC2B,EAAa,WACf,IAAMC,EAAiBvH,IAAMwH,SAAQ,WACjC,OACI,mCACK9D,MAAMC,KAAKD,MDtNC,ICsNoBmD,QAAQjD,KAAI,SAAC+B,GAC1C,OAAO,cAAC,EAAS,CAAsBlD,IAAKkD,EAAQ,GAAE,OAAxBA,UAI3C,IAEH,OAAO,cAAC0B,EAAA,QAAI,CAACb,MAAOxE,EAAeU,OAAO,SAAE6E,KAGnCE,EAAW,WACpB,IAAMlD,EAAiBmD,uBAAapH,GACpC,EAAwCN,IAAMgE,SAAmB,IAAG,WAA7D2D,EAAY,KAAEC,EAAe,KACpC,EAAwC5H,IAAMgE,SAAmB,IAAG,WAA7D6D,EAAY,KAEbC,GAF8B,KAEhB9H,IAAM+H,UA2B1B,OAzBA/H,IAAM6E,WAAU,YACPgD,EAAazB,QAAWuB,EAAavB,SACrC0B,EAAYE,SACjBF,EAAYE,QAAQC,UACrB,CAACJ,EAAcF,EAAcG,IAEhC9H,IAAM6E,WAAU,WACZnB,MAAMC,KAAKD,MAAM,IAAImD,QAAQC,SAAQ,SAACoB,GAGd,KADhB3D,EAAe4D,QAAO,SAACC,GAAsB,OAAKA,EAAO3F,MAAQyF,EAAW,KACvE9B,QACJuB,EAAa7C,SAASoD,EAAW,IAElCN,GAAgB,SAACrC,GAAc,OAAKA,EAAKC,OAAO0C,EAAW,MAI3C,KADhB3D,EAAe4D,QAAO,SAACC,GAAsB,OAAKA,EAAO9B,MAAQ4B,EAAW,KACvE9B,QACJuB,EAAa7C,SAASoD,EAAW,IAElCN,GAAgB,SAACrC,GAAc,OAAKA,EAAKC,OAAO0C,EAAW,WAGpE,CAAC3D,IAGA,eAAC8C,EAAA,QAAI,CAACb,MAAOxE,EAAeO,aAAa,UACrC,cAAC,EAAU,IACX,cAAC,UAAc,CACX8F,MAAO,IACPC,OAAQ,CAAEC,GAAI,GAAIC,EAAG,GACrBC,WAAW,EACXC,SAAS,EACTC,IAAKb,Q,ikBC/PrB,IAAMc,EAAa,WAGf,OACI,eAACC,EAAA,QAAY,CAACrC,MAAO,CAAEpE,KAAM,GAAI,UAC7B,cAAC,EAAM,IACP,cAAC,UAAO,IACR,cAAC,SAAM,CAACoE,MAAOxE,EAAeG,UAAW2G,MAAM,IAAG,SAC9C,cAAC,EAAQ,UAMV,qBACX,MAA0B9I,IAAMgE,SAAS,SAAQ,WAA1C9D,EAAK,KAAE6I,EAAQ,KAOtB,OACI,qCACI,cAAC,eAAY,CAACC,MAAOC,iBACrB,cAAClJ,EAAamJ,SAAQ,CAACvH,MAAO,CAAEzB,QAAOC,YAR3B,WAEhB4I,EAD4B,UAAV7I,EAAoB,OAAS,WAOU,SACjD,cAAC,sBAAmB,OAAKiJ,GAAG,IAAEjJ,MAAOiJ,EAAIjJ,GAAO,SAC5C,cAAC,EAAU,c","file":"static/js/app.a8391f9b.chunk.js","sourcesContent":["import React from \"react\"\nimport * as eva from \"@eva-design/eva\"\nimport {\n  ApplicationProvider,\n  Layout,\n  IconRegistry,\n  Text,\n  Divider\n} from \"@ui-kitten/components\"\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\"\nimport { SafeAreaView } from \"react-native\"\nimport { TopBar } from \"./TopBar\"\nimport { PlayArea } from \"./PlayArea\"\n\nexport const ThemeContext = React.createContext({\n  theme: 'light',\n  toggleTheme: () => {},\n})\n","import { atom } from \"jotai\"\nimport { SquareDataType, COL_BASE, ROW_COL_BASE } from \"../const\"\n\nexport const activeRowAtom = atom<number>(0)\nexport const activeColAtom = atom<number>(0)\nexport const activeSquaresAtom = atom<number>(0)\nexport const rowLockAtom = atom<boolean>(false)\nexport const colLockAtom = atom<boolean>(false)\n// button trackers\nexport const pressTrackerAtom = atom<SquareDataType[]>([])\nexport const disableTrackerAtom = atom<SquareDataType[]>([])\nexport const allSquaresAtom = atom<SquareDataType[]>([])\n// score\nexport const sessionScoreAtom = atom<number>(0)\nexport const displayScorePrevAtom = atom<number>(0)\nexport const displayScoreAtom = atom<number>(0)\n","import React from \"react\"\nimport {\n    Layout,\n    TopNavigation,\n    TopNavigationAction,\n    Icon,\n    Text,\n    IconProps,\n} from \"@ui-kitten/components\"\nimport { ThemeContext } from \"../theme-context\"\nimport { useAtom } from \"jotai\"\nimport { displayScoreAtom, displayScorePrevAtom } from \"../Atoms\"\nimport AnimateNumber from \"react-native-countup\"\nimport { View } from \"react-native\"\n\nconst ThemeIcon = (props: IconProps) => {\n    const themeContext = React.useContext(ThemeContext)\n    return <Icon {...props} name={themeContext.theme === \"light\" ? \"sun\" : \"moon\"} />\n}\n\nconst AwardIcon = (props: IconProps) => {\n    const themeContext = React.useContext(ThemeContext)\n    return <Icon {...props} name=\"award\" />\n}\n\nexport const TopBar = () => {\n    const themeContext = React.useContext(ThemeContext)\n    const [displayScore, setDisplayScore] = useAtom(displayScoreAtom)\n    const [displayScorePrev, setDisplayScorePrev] = useAtom(displayScorePrevAtom)\n\n    // const ScoreCount = React.useMemo(() => {\n    //   return <AnimateNumber initial={displayScorePrev} value={displayScore} timing=\"easeIn\" countBy={1}/>\n    // }, [displayScore])\n\n    const topLeftActions = () => (\n        <React.Fragment>\n            <TopNavigationAction icon={AwardIcon} />\n            <Text>Score: </Text>\n            <AnimateNumber\n                initial={displayScorePrev}\n                value={displayScore}\n                timing=\"easeIn\"\n                countBy={1}\n            />\n        </React.Fragment>\n    )\n\n    const topRightActions = () => (\n        <React.Fragment>\n            <TopNavigationAction icon={ThemeIcon} onPress={themeContext.toggleTheme} />\n        </React.Fragment>\n    )\n\n    return (\n        <TopNavigation\n            alignment=\"center\"\n            title=\"Ten-Ten\"\n            accessoryLeft={topLeftActions}\n            accessoryRight={topRightActions}\n        />\n    )\n}\n","import { StyleService } from \"@ui-kitten/components\"\n\nexport const playAreaStyles = StyleService.create({\n    container: {\n        flex: 1,\n        flexDirection: \"column\",\n        alignItems: \"stretch\",\n    },\n    subcontainer: {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        overflowX: \"hidden\",\n    },\n    row: {\n        flexDirection: \"row\",\n    },\n    column: {\n        flexDirection: \"column\",\n    },\n    square_base: {\n        width: \"39px\",\n        height: \"39px\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderWidth: 1,\n        borderRadius: 5,\n        margin: \"1px\",\n    },\n    square_unpressed: {\n        borderColor: \"color-primary-default\",\n        backgroundColor: \"color-primary-transparent-100\",\n        color: \"color-primary-default\",\n    },\n    square_pressed: {\n        borderColor: \"color-success-default\",\n        backgroundColor: \"color-success-transparent-100\",\n        color: \"color-success-default\",\n    },\n    square_disabled: {\n        borderColor: \"color-basic-disabled\",\n        backgroundColor: \"color-basic-transparent-100\",\n        color: \"color-basic-disabled\",\n        cursor: \"default\",\n    },\n})\n","export const PLAYAREA_COLS = 10\nexport const PLAYAREA_ROWS = 10\nexport const COL_BASE: boolean[] = Array.from(Array(PLAYAREA_COLS)).map(() => false)\nexport const ROW_COL_BASE: boolean[][] = Array.from(Array(PLAYAREA_ROWS)).map(()=> COL_BASE)\n\nexport type SquareDataType = {\n    row: number,\n    col: number,\n    value: number\n  }","import React from \"react\"\nimport { View, Pressable } from \"react-native\"\nimport { useStyleSheet } from \"@ui-kitten/components\"\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\"\nimport {\n    allSquaresAtom,\n    displayScorePrevAtom,\n    displayScoreAtom,\n    disableTrackerAtom,\n    sessionScoreAtom,\n    pressTrackerAtom,\n} from \"../Atoms\"\nimport { playAreaStyles } from \"../styles\"\nimport { SquareDataType, PLAYAREA_COLS, PLAYAREA_ROWS } from \"../const\"\nimport ConfettiCannon from \"react-native-confetti-cannon\"\n\ninterface SingleSquareProps {\n    data: SquareDataType\n}\nconst SingleSquare = (props: SingleSquareProps) => {\n    const styles = useStyleSheet(playAreaStyles)\n    const [isActive, setIsActive] = React.useState<boolean>(false)\n    const [isDisabled, setIsDisabled] = React.useState<boolean>(false)\n    const [pressTracker, setPressTracker] = useAtom(pressTrackerAtom)\n    const [disableTracker, setDisableTracker] = useAtom(disableTrackerAtom)\n    const [sessionScore, setSessionScore] = useAtom(sessionScoreAtom)\n    const [displayScore, setDisplayScore] = useAtom(displayScoreAtom)\n    const [displayScorePrev, setDisplayScorePrev] = useAtom(displayScorePrevAtom)\n\n    React.useEffect(() => {\n        setIsActive(pressTracker.includes(props.data))\n        setIsDisabled(disableTracker.includes(props.data))\n    }, [pressTracker, props])\n\n    const isPressAboveLimit = React.useCallback(\n        (value: number) => {\n            console.info(\"Score Check\", sessionScore, value)\n            if (sessionScore + value > 10) {\n                console.log(\"Score would pass limit\")\n                return true\n            }\n            return false\n        },\n        [sessionScore]\n    )\n\n    const isPressFullScore = React.useCallback(\n        (value: number) => {\n            console.info(\"Score Check\", sessionScore, value)\n            if (sessionScore + value === 10) {\n                console.log(\"Row/Col completed. Nice.\")\n                return true\n            }\n            return false\n        },\n        [sessionScore]\n    )\n\n    const addToTracker = React.useCallback(\n        (data: SquareDataType) => {\n            setPressTracker((prev: SquareDataType[]) => {\n                const newTracker = [...prev].concat(data)\n                return newTracker\n            })\n        },\n        [setPressTracker, pressTracker, setSessionScore, sessionScore]\n    )\n\n    const delFromTracker = React.useCallback(\n        (data: SquareDataType) => {\n            setSessionScore((prev: number) => prev - data.value)\n            setPressTracker((prev: SquareDataType[]) => {\n                const newTracker = [...prev]\n                const index = newTracker.indexOf(data)\n                newTracker.splice(index, 1)\n                return newTracker\n            })\n        },\n        [setSessionScore, setPressTracker]\n    )\n\n    const increaseScore = React.useCallback(\n        (addScore: number) => {\n            setSessionScore((prev: number) => prev + addScore)\n        },\n        [setSessionScore]\n    )\n\n    const resetScore = React.useCallback(() => {\n        setSessionScore(0)\n    }, [setSessionScore])\n\n    const increaseDisplayScore = React.useCallback(\n        (addScore: number) => {\n            setDisplayScorePrev(displayScore)\n            setDisplayScore((prev: number) => prev + addScore)\n        },\n        [setSessionScore, displayScore]\n    )\n\n    const checkAndAction = React.useCallback(\n        (data: SquareDataType) => {\n            if (isPressAboveLimit(data.value)) return\n            if (isPressFullScore(data.value)) {\n                console.log(\"disable buttons, update display score, clean pressTracker\")\n                // disable buttons, clean tracker\n                const squaresDone = [...pressTracker].concat(data)\n                setDisableTracker((prev: SquareDataType[]) => prev.concat(squaresDone))\n                setPressTracker([])\n                // Set display score\n                increaseDisplayScore(sessionScore + data.value + squaresDone.length)\n                resetScore()\n                return\n            }\n            addToTracker(data)\n            increaseScore(data.value)\n        },\n        [isPressAboveLimit, isPressFullScore, increaseScore, addToTracker, resetScore, pressTracker]\n    )\n\n    const handlePress = React.useCallback(\n        (data: SquareDataType) => {\n            console.log(\n                \"Square Pressed:\",\n                data.value,\n                \"coords:\",\n                data.row,\n                data.col,\n                pressTracker.length\n            )\n            // De-Selection\n            if (pressTracker.includes(data)) {\n                console.log(\"Removing square\")\n                delFromTracker(data)\n                return\n            }\n            // No selections\n            if (!pressTracker.length) {\n                console.log(\"Adding square\")\n                checkAndAction(data)\n                return\n            }\n            // 1 square, can add col or row\n            if (pressTracker.length === 1) {\n                console.log(\"Adding square row/col allowed\")\n                if (pressTracker[0].row === data.row || pressTracker[0].col === data.col) {\n                    checkAndAction(data)\n                }\n                return\n            }\n            console.log(\"Adding square only row or col allowed\")\n            if (pressTracker[0].row === pressTracker[1].row && pressTracker[1].row === data.row) {\n                checkAndAction(data)\n                return\n            }\n            if (pressTracker[0].col === pressTracker[1].col && pressTracker[1].col === data.col) {\n                checkAndAction(data)\n                return\n            }\n        },\n        [pressTracker, setPressTracker]\n    )\n\n    return (\n        <Pressable\n            style={[\n                styles.square_base,\n                isActive\n                    ? styles.square_pressed\n                    : isDisabled\n                    ? styles.square_disabled\n                    : styles.square_unpressed,\n            ]}\n            onPress={() => !isDisabled && handlePress(props.data)}\n        >\n            {props.data.value}\n        </Pressable>\n    )\n}\n\ninterface SquareRowProps {\n    row: number\n}\nconst SquareRow = (props: SquareRowProps) => {\n    const setAllSquares = useSetAtom(allSquaresAtom)\n\n    let allSquares: SquareDataType[] = []\n\n    Array.from(Array(PLAYAREA_COLS).keys()).forEach((index: number) => {\n        const squareValue: number = Math.floor(Math.random() * 10) || 1\n        const squareData: SquareDataType = {\n            row: props.row,\n            col: index + 1,\n            value: squareValue,\n        }\n        allSquares.push(squareData)\n    })\n\n    setAllSquares(allSquares)\n\n    return (\n        <View style={playAreaStyles.row}>\n            <>\n                {allSquares.map((squareData: SquareDataType, index: number) => {\n                    return <SingleSquare key={index} data={squareData} />\n                })}\n            </>\n        </View>\n    )\n}\n\nconst AllSquares = () => {\n    const AllRowsAndCols = React.useMemo(() => {\n        return (\n            <>\n                {Array.from(Array(PLAYAREA_ROWS).keys()).map((index: number) => {\n                    return <SquareRow key={`row-${index}`} row={index + 1} />\n                })}\n            </>\n        )\n    }, [])\n\n    return <View style={playAreaStyles.column}>{AllRowsAndCols}</View>\n}\n\nexport const PlayArea = () => {\n    const disableTracker = useAtomValue(disableTrackerAtom)\n    const [completedRow, setCompletedRow] = React.useState<number[]>([])\n    const [completedCol, setCompletedCol] = React.useState<number[]>([])\n\n    const confettiRef = React.useRef()\n\n    React.useEffect(() => {\n        if (!completedCol.length && !completedRow.length) return\n        if (!confettiRef.current) return\n        confettiRef.current.start()\n    }, [completedCol, completedRow, confettiRef])\n\n    React.useEffect(() => {\n        Array.from(Array(10).keys()).forEach((position: number) => {\n            if (\n                disableTracker.filter((square: SquareDataType) => square.row === position + 1)\n                    .length === 10 &&\n                !completedRow.includes(position + 1)\n            ) {\n                setCompletedRow((prev: number[]) => prev.concat(position + 1))\n            }\n            if (\n                disableTracker.filter((square: SquareDataType) => square.col === position + 1)\n                    .length === 10 &&\n                !completedRow.includes(position + 1)\n            ) {\n                setCompletedRow((prev: number[]) => prev.concat(position + 1))\n            }\n        })\n    }, [disableTracker])\n\n    return (\n        <View style={playAreaStyles.subcontainer}>\n            <AllSquares />\n            <ConfettiCannon\n                count={200}\n                origin={{ x: -20, y: 0 }}\n                autoStart={false}\n                fadeOut={true}\n                ref={confettiRef}\n            />\n        </View>\n    )\n}\n","import React from \"react\"\nimport * as eva from \"@eva-design/eva\"\nimport { ApplicationProvider, IconRegistry, Divider, Layout } from \"@ui-kitten/components\"\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\"\nimport { SafeAreaView } from \"react-native\"\nimport { TopBar } from \"./TopBar\"\nimport { PlayArea } from \"./PlayArea\"\nimport { ThemeContext } from \"./theme-context\"\nimport { playAreaStyles } from \"./styles\"\n\nconst HomeScreen = () => {\n    const blah = 1\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n            <TopBar />\n            <Divider />\n            <Layout style={playAreaStyles.container} level=\"1\">\n                <PlayArea />\n            </Layout>\n        </SafeAreaView>\n    )\n}\n\nexport default () => {\n    const [theme, setTheme] = React.useState(\"light\")\n\n    const toggleTheme = () => {\n        const nextTheme = theme === \"light\" ? \"dark\" : \"light\"\n        setTheme(nextTheme)\n    }\n\n    return (\n        <>\n            <IconRegistry icons={EvaIconsPack} />\n            <ThemeContext.Provider value={{ theme, toggleTheme }}>\n                <ApplicationProvider {...eva} theme={eva[theme]}>\n                    <HomeScreen />\n                </ApplicationProvider>\n            </ThemeContext.Provider>\n        </>\n    )\n}\n"],"sourceRoot":""}